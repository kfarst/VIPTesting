//
//  MainInteractor.swift
//  VIPTesting
//
//  Created by Kevin Farst on 9/9/19.
//  Copyright (c) 2019 Kevin Farst. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainBusinessLogic {
    func updateCurrentTime()
    func saveUserInfo(request: Main.UserInfo.Request)
    func getUserInfo()
    func showGreeting()
    func userInfoChanged(request: Main.UserInfo.Request)
}

protocol Storage {
    func set(_ value: Any?, forKey defaultName: String)
    func string(forKey defaultName: String) -> String?
    func synchronize() -> Bool
}

extension UserDefaults: Storage { /* conform UserDefaults to Storage */ }

protocol MainDataStore {
  //var name: String { get set }
}

class MainInteractor: MainBusinessLogic, MainDataStore {
    var presenter: MainPresentationLogic?
    
    var storage: Storage

    init(storage: Storage = UserDefaults.standard) {
        self.storage = storage
    }
    
    func updateCurrentTime() {
        let response = Main.CurrentTime.Response(date: Date())
        presenter?.displayCurrentTime(response: response)
    }
    
    func saveUserInfo(request: Main.UserInfo.Request) {
        if let name = request.name {
            storage.set(name, forKey: "name")
            storage.synchronize()
            
            let response = Main.Message.Response(
                type: .message,
                text: "Name saved!"
            )

            getUserInfo()
            
            presenter?.showToast(response: response)
        } else {
            let response = Main.Message.Response(
                type: .error,
                text: "Please enter your name"
            )
            
            presenter?.showAlert(response: response)
        }
    }
    
    func getUserInfo() {
        let response = Main.UserInfo.Response(
            text: storage.string(forKey: "name")
        )
        presenter?.setUserInfo(response: response)
    }
    
    func showGreeting() {
        let response = Main.UserInfo.Response(
            type: .message,
            text: String(format: "Hi, %@!", storage.string(forKey: "name") ?? "")
        )

        presenter?.showAlert(response: response)
    }
    
    func userInfoChanged(request: Main.UserInfo.Request) {
        let response = Main.UserInfo.Response(
            text: request.name
        )
        
        presenter?.updateUserInfo(response: response)
    }
}
